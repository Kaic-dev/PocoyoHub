-- Defina o estado inicial do ESP
getgenv().ESP = false

-- SERVICES
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera
local UserInputService = game:GetService("UserInputService")

-- CONSTANTS
local BILLBOARD_SIZE = UDim2.new(0, 500, 0, 100)
local MAINFRAME_SIZE = UDim2.new(1, 0, 1, 0)
local OFFSET_SCALE_INCREMENT = 0.20

-- Tabelas para rastrear os ESPs e conexões
local espInstances = {}
local characterConnections = {}
local renderSteppedConnections = {}

-- FUNCTIONS
-- Utility: Creates a UIScale instance and attaches it to the parent
local function createUIScale(parent)
    local uiScale = Instance.new("UIScale")
    uiScale.Scale = 1
    uiScale.Parent = parent
    return uiScale
end

-- Utility: Updates UIScale based on the length of text (ignoring brackets)
local function updateScale(text, scale)
    local cleanedText = string.gsub(text, "[%[%]]", "")
    local length = #cleanedText

    scale.Scale = length <= 3 and 1 or 1 + ((length - 3) * OFFSET_SCALE_INCREMENT)
end

-- Utility: Adds a UIStroke to a TextLabel
local function addUIStroke(label, color, thickness)
    local uiStroke = Instance.new("UIStroke")
    uiStroke.Color = color
    uiStroke.Thickness = thickness
    uiStroke.Parent = label
    return uiStroke
end

-- UI Creation: Generates a TextLabel with specific properties and a UIStroke
local function createTextLabel(name, text, size, parent, color, textXAlign, textYAlign)
    local label = Instance.new("TextLabel")
    label.Name = name
    label.Text = text
    label.Size = size
    label.BackgroundTransparency = 1
    label.TextColor3 = color
    label.TextScaled = true
    label.Font = Enum.Font.SourceSansBold
    label.TextXAlignment = textXAlign or Enum.TextXAlignment.Center
    label.TextYAlignment = textYAlign or Enum.TextYAlignment.Center
    label.Parent = parent

    addUIStroke(label, Color3.fromRGB(0, 0, 0), 2) -- Adds black stroke with thickness of 2
    return label
end

-- UI Setup: Configures UIListLayout for a given parent
local function setupUIListLayout(parent, fillDirection, horizontalAlignment, verticalAlignment)
    local layout = Instance.new("UIListLayout")
    layout.FillDirection = fillDirection or Enum.FillDirection.Horizontal
    layout.SortOrder = Enum.SortOrder.LayoutOrder
    layout.HorizontalAlignment = horizontalAlignment or Enum.HorizontalAlignment.Center
    layout.VerticalAlignment = verticalAlignment or Enum.VerticalAlignment.Bottom
    layout.Parent = parent
end

-- Leaderboard UI Creation
local function createLeaderboard()
    local leaderboardGui = Instance.new("ScreenGui")
    leaderboardGui.Name = "SuperLeaderBoard"
    leaderboardGui.ResetOnSpawn = false -- Impede que o GUI seja destruído ao respawnar
    leaderboardGui.Parent = Players.LocalPlayer:WaitForChild("PlayerGui")

    local ImageButton = Instance.new("ImageButton")
    ImageButton.Name = "LeaderboardButton"
    ImageButton.AnchorPoint = Vector2.new(1, 0)
    ImageButton.BackgroundTransparency = 1
    ImageButton.Position = UDim2.new(1, 0, 0, 0)
    ImageButton.Size = UDim2.new(0.05, 150, 0, 240)
    ImageButton.Image = "rbxassetid://1327087642"
    ImageButton.ImageTransparency = 0.8
    ImageButton.Parent = leaderboardGui

    local scrollingFrame = Instance.new("ScrollingFrame")
    scrollingFrame.Name = "LeaderboardScrollingFrame"
    scrollingFrame.BackgroundTransparency = 1
    scrollingFrame.Position = UDim2.new(0, 15, 0, 10)
    scrollingFrame.Size = UDim2.new(1, -30, 1, 20)
    scrollingFrame.BottomImage = "rbxassetid://3515608177"
    scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 220)
    scrollingFrame.MidImage = "rbxassetid://3515608813"
    scrollingFrame.ScrollBarImageColor3 = Color3.fromRGB(245, 197, 130)
    scrollingFrame.ScrollBarThickness = 10
    scrollingFrame.TopImage = "rbxassetid://3515609176"
    scrollingFrame.VerticalScrollBarPosition = Enum.VerticalScrollBarPosition.Right
    scrollingFrame.Parent = ImageButton

    return leaderboardGui, scrollingFrame
end

-- Utility: Determines the Edict based on items in the player's Backpack
local function getEdict(player)
    local backpack = player:FindFirstChild("Backpack")
    if not backpack then return "None" end

    local edictItems = {
        ["Seer"] = {"Intent"},
        ["Healer"] = {"Mederi"},
        ["Blademaster"] = {"Verto"}
    }

    for edict, items in pairs(edictItems) do
        for _, itemName in ipairs(items) do
            if backpack:FindFirstChild(itemName) then
                return edict
            end
        end
    end

    return "None"
end

-- Utility: Generates the RogueName string based on player attributes
local function getRogueName(player)
    local firstName = player:GetAttribute("FirstName") or "Unknown"
    local lastName = player:GetAttribute("LastName") or "Unknown"
    local houseRank = player:GetAttribute("HouseRank") or ""

    if houseRank == "Owner" then
        return string.format("Lord %s %s", firstName, lastName)
    elseif houseRank == "Member" then
        return string.format("%s %s", firstName, lastName)
    elseif houseRank == "" then
        return firstName
    end
    return "[RogueName]"
end

-- Global variable to track the currently observed player
local observedPlayer = nil

-- Função para atualizar a aparência do rótulo de um jogador
local function updatePlayerLabelAppearance(player, label)
    local isMaxEdict = player:GetAttribute("MaxEdict")
    local characterExists = player.Character ~= nil

    -- Verifica se o Backpack existe antes de procurar pelo item 'Observe'
    local backpack = player:FindFirstChild("Backpack")
    local hasObserve = backpack and backpack:FindFirstChild("Observe")

    -- Atualiza a transparência do texto com base no status do personagem
    label.TextTransparency = characterExists and 0 or 0.3

    -- Atualiza a cor do texto com base em várias condições
    if observedPlayer == player then
        label.TextColor3 = Color3.fromRGB(236, 218, 16) -- Dourado se estiver observando
    elseif isMaxEdict then
        label.TextColor3 = Color3.fromRGB(255, 165, 0) -- Laranja se tiver MaxEdict
    elseif hasObserve then
        label.TextColor3 = Color3.fromRGB(255, 0, 0) -- Vermelho se tiver o item 'Observe' no Backpack
    else
        label.TextColor3 = Color3.fromRGB(255, 255, 255) -- Branco padrão
    end
end


-- Function to reset the previous observation
local function resetPreviousObservation(scrollingFrame)
    if observedPlayer then
        local previousPlayer = observedPlayer -- Store the previous player
        local previousLabel = scrollingFrame:FindFirstChild(observedPlayer.Name .. "_Label")
        observedPlayer = nil -- Clear the variable after storing

        if previousLabel then
            updatePlayerLabelAppearance(previousPlayer, previousLabel) -- Update appearance
        end
    end
end

-- Função para obter ou criar o SuperLeaderboard
local function getOrCreateSuperLeaderboard()
    local playerGui = Players.LocalPlayer:WaitForChild("PlayerGui")
    local leaderboardGui = playerGui:FindFirstChild("SuperLeaderBoard")

    if not leaderboardGui then
        leaderboardGui, scrollingFrame = createLeaderboard()
    end

    return leaderboardGui
end

-- Função corrigida para rebuildLeaderboard()
local function rebuildLeaderboard()
    local oldLeaderboard = game.Players.LocalPlayer.PlayerGui:FindFirstChild("LeaderboardGui")
    if oldLeaderboard then
        oldLeaderboard.Enabled = false
    end
    
    local superLeaderboard = getOrCreateSuperLeaderboard()

    -- Identificar o ScrollingFrame dentro do SuperLeaderboard
    local scrollingFrame = superLeaderboard:FindFirstChild("LeaderboardScrollingFrame", true)
    if not scrollingFrame then
        warn("[ERROR] LeaderboardScrollingFrame not found in SuperLeaderboard.")
        return
    end

    -- Deleta todos os rótulos existentes
    for _, child in ipairs(scrollingFrame:GetChildren()) do
        if child:IsA("TextButton") then
            child:Destroy()
        end
    end

    -- Obtém a lista de jogadores atuais
    local players = {}
    for _, player in ipairs(Players:GetPlayers()) do
        table.insert(players, player)
    end

    -- Opcional: ordenar os jogadores por nome
    table.sort(players, function(a, b)
        return a.Name:lower() < b.Name:lower()
    end)

    -- Recria os rótulos para os jogadores atuais
    for index, player in ipairs(players) do
        -- Criar o rótulo do jogador
        local PlayerLabel = Instance.new("TextButton")
        PlayerLabel.Name = player.Name .. "_Label"
        PlayerLabel.BackgroundTransparency = 1
        PlayerLabel.Position = UDim2.new(0, 0, 0, (index - 1) * 20)
        PlayerLabel.Size = UDim2.new(1, 0, 0, 20)
        PlayerLabel.Text = getRogueName(player)
        PlayerLabel.TextSize = 18
        PlayerLabel.Font = Enum.Font.SourceSansBold
        PlayerLabel.TextStrokeTransparency = 0.2
        PlayerLabel.TextXAlignment = Enum.TextXAlignment.Left
        PlayerLabel.Parent = scrollingFrame

        -- Configurar a aparência inicial
        updatePlayerLabelAppearance(player, PlayerLabel)

        -- Eventos de monitoramento de personagem
        player.CharacterAdded:Connect(function()
            updatePlayerLabelAppearance(player, PlayerLabel)
        end)
        player.CharacterRemoving:Connect(function()
            updatePlayerLabelAppearance(player, PlayerLabel)
        end)

        -- Funcionalidade de hover do mouse
        PlayerLabel.MouseEnter:Connect(function()
            PlayerLabel.TextTransparency = 0.3 -- Reduz a transparência ao passar o mouse
            PlayerLabel.Text = player.Name -- Mostra o nome completo do jogador
        end)

        PlayerLabel.MouseLeave:Connect(function()
            PlayerLabel.TextTransparency = player.Character and 0 or 0.3 -- Reseta a transparência com base no status do personagem
            PlayerLabel.Text = getRogueName(player) -- Mostra novamente o RogueName
        end)

        -- Funcionalidade de observação (clique com o botão direito)
        PlayerLabel.MouseButton2Click:Connect(function()
            if observedPlayer == player then
                -- Parar de observar
                observedPlayer = nil
                Camera.CameraType = Enum.CameraType.Custom
                Camera.CameraSubject = Players.LocalPlayer.Character:FindFirstChild("Humanoid")
                print("Stopped spectating:", player.Name)
                updatePlayerLabelAppearance(player, PlayerLabel)
            else
                -- Reseta a observação anterior
                resetPreviousObservation(scrollingFrame)

                -- Define o novo jogador observado
                observedPlayer = player
                Camera.CameraType = Enum.CameraType.Follow
                Camera.CameraSubject = player.Character:FindFirstChild("Humanoid")
                print("Now spectating:", player.Name)
                updatePlayerLabelAppearance(player, PlayerLabel)
            end
        end)
    end

    -- Atualiza o CanvasSize do ScrollingFrame
    scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, #players * 20)

    -- Atualiza a aparência do jogador observado, se ainda estiver no jogo
    if observedPlayer then
        local observedLabel = scrollingFrame:FindFirstChild(observedPlayer.Name .. "_Label")
        if observedLabel then
            updatePlayerLabelAppearance(observedPlayer, observedLabel)
        else
            observedPlayer = nil
        end
    end
end

local function updateAllESP()
    if not getgenv().ESP then return end

    for player, esp in pairs(espInstances) do
        if player.Character and player.Character:FindFirstChild("Head") then
            local head = player.Character.Head
            local distance = math.floor((Camera.CFrame.Position - head.Position).Magnitude)

            local offsetLabel = esp:FindFirstChild("MainFrame"):FindFirstChild("TertiaryFrame"):FindFirstChild("Offset")
            if offsetLabel then
                offsetLabel.Text = string.format("[%03d]", distance)
                updateScale(offsetLabel.Text, offsetLabel:FindFirstChild("UIScale"))
            end
        end
    end
end

-- Conexão única ao RenderStepped
RunService.RenderStepped:Connect(updateAllESP)

local function updateESP(player)
	local function updateHealth(humanoid, healthLabel, healthPercentageLabel)
		local health = humanoid.Health
		local maxHealth = humanoid.MaxHealth
		healthLabel.Text = string.format("[%d/%d]", math.floor(health), math.floor(maxHealth))
		healthPercentageLabel.Text = string.format("[%d%%]", math.floor((health / maxHealth) * 100))
	end
	

    -- Remove ESP existente, se houver
    if espInstances[player] then
        espInstances[player]:Destroy()
        espInstances[player] = nil
    end

    -- Verifica se o ESP está ativado
    if not getgenv().ESP then
        return
    end

    -- Verifica se o jogador possui um Character e Head
    if not (player.Character and player.Character:FindFirstChild("Head")) then
        return
    end

    local head = player.Character.Head

    -- Cria o BillboardGui
    local billboard = Instance.new("BillboardGui")
    billboard.Name = "PlayerESP"
    billboard.Adornee = head
    billboard.Size = BILLBOARD_SIZE
    billboard.SizeOffset = Vector2.new(0, 0.5)
    billboard.AlwaysOnTop = true
    billboard.Parent = head

    -- Frame Principal
    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainFrame"
    mainFrame.Size = MAINFRAME_SIZE
    mainFrame.BackgroundTransparency = 1
    mainFrame.Parent = billboard

    -- Frame Primário
    local primaryFrame = Instance.new("Frame")
    primaryFrame.Name = "PrimaryFrame"
    primaryFrame.Size = UDim2.new(1, 0, 0.2, 0)
    primaryFrame.Position = UDim2.new(0, 0, 0.3, 0)
    primaryFrame.BackgroundTransparency = 1
    primaryFrame.Parent = mainFrame
    setupUIListLayout(primaryFrame)

    -- Nome do Jogador
    createTextLabel("PlayerName", string.format("[%s]", player.Name), UDim2.new(1, 0, 1, 0), primaryFrame, Color3.fromRGB(255, 255, 255))

    -- Frame Secundário
    local secondaryFrame = Instance.new("Frame")
    secondaryFrame.Name = "SecondaryFrame"
    secondaryFrame.Size = UDim2.new(1, 0, 0.2, 0)
    secondaryFrame.Position = UDim2.new(0, 0, 0.5, 0)
    secondaryFrame.BackgroundTransparency = 1
    secondaryFrame.Parent = mainFrame
    setupUIListLayout(secondaryFrame)

    -- Nome do Rogue e Edict
    createTextLabel("RogueName", string.format("[%s]", getRogueName(player)), UDim2.new(0.2, 0, 1, 0), secondaryFrame, Color3.fromRGB(255, 255, 255))
    createTextLabel("Edict", string.format("[%s]", getEdict(player)), UDim2.new(0.1, 0, 1, 0), secondaryFrame, Color3.fromRGB(255, 255, 255))

    -- Frame Terciário
    local tertiaryFrame = Instance.new("Frame")
    tertiaryFrame.Name = "TertiaryFrame"
    tertiaryFrame.Size = UDim2.new(1, 0, 0.2, 0)
    tertiaryFrame.Position = UDim2.new(0, 0, 0.7, 0)
    tertiaryFrame.BackgroundTransparency = 1
    tertiaryFrame.Parent = mainFrame
    setupUIListLayout(tertiaryFrame)

    -- Rótulos de Distância e Saúde
    local offsetLabel = createTextLabel("Offset", "[000]", UDim2.new(0.1, 0, 1, 0), tertiaryFrame, Color3.fromRGB(255, 255, 255))
    createUIScale(offsetLabel)

    local healthLabel = createTextLabel("Health", "[0/100]", UDim2.new(0.1, 0, 1, 0), tertiaryFrame, Color3.fromRGB(255, 255, 255))
    local healthPercentageLabel = createTextLabel("HealthPercentage", "[100%]", UDim2.new(0.1, 0, 1, 0), tertiaryFrame, Color3.fromRGB(255, 255, 255))

    -- Conecta sinais ao humanoide
    local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
    if humanoid then
        humanoid:GetPropertyChangedSignal("Health"):Connect(function()
            updateHealth(humanoid, healthLabel, healthPercentageLabel)
        end)
        humanoid:GetPropertyChangedSignal("MaxHealth"):Connect(function()
            updateHealth(humanoid, healthLabel, healthPercentageLabel)
        end)

        -- Atualiza a saúde inicial
        updateHealth(humanoid, healthLabel, healthPercentageLabel)
    end

    -- Armazena o ESP
    espInstances[player] = billboard
end



-- Função para remover todos os ESPs
local function removeAllESPs()
    -- Itera por todos os ESPs armazenados
    for player, esp in pairs(espInstances) do
        -- Verifica se o ESP existe e o destrói
        if esp then
            esp:Destroy()
            espInstances[player] = nil
        end

        -- Remove conexões relacionadas ao Character
        if characterConnections[player] then
            for _, connection in pairs(characterConnections[player]) do
                connection:Disconnect()
            end
            characterConnections[player] = nil
        end
    end
end


-- Main: Setup the UI and apply functionalities
local function setupUI()
    local leaderboardGui, scrollingFrame = createLeaderboard()

    -- Function to handle initial setup for existing players
    local function initializePlayers()
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= Players.LocalPlayer then
                updateESP(player)
            end
            player.CharacterAdded:Connect(function(character)
                if getgenv().ESP then
					updateESP(player)
				end
            end)
        end
    end

    initializePlayers()

    -- Inicializa o leaderboard com os jogadores atuais
    rebuildLeaderboard()

    -- Handle new players joining
	Players.PlayerAdded:Connect(function(player)
		rebuildLeaderboard()
		if player ~= Players.LocalPlayer then
			player.CharacterAdded:Connect(function(character)
				if getgenv().ESP then
					updateESP(player)
				end
			end)
		end
	end)



    -- Handle players leaving
    Players.PlayerRemoving:Connect(function(player)
        -- Remove the player's ESP
        if espInstances[player] then
            espInstances[player]:Destroy()
            espInstances[player] = nil
        end

        -- Disconnect character-related connections
        if characterConnections[player] then
            for _, connection in pairs(characterConnections[player]) do
                connection:Disconnect()
            end
            characterConnections[player] = nil
        end

        -- Disconnect RenderStepped connections
        if renderSteppedConnections[player] then
            renderSteppedConnections[player]:Disconnect()
            renderSteppedConnections[player] = nil
        end

        rebuildLeaderboard()
        -- Reset observedPlayer if it was the removed player
        if observedPlayer == player then
            observedPlayer = nil
        end
    end)
end

setupUI()

-- VARIABLES
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- UI CREATION
-- ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "Pocoyo"
screenGui.Parent = playerGui
screenGui.Enabled = false -- Initially disabled
screenGui.ResetOnSpawn = false -- Impede que o GUI seja destruído ao respawnar

-- MainFrame
local mainFrame = Instance.new("Frame")
mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
mainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
mainFrame.Size = UDim2.new(0.5, 0, 0.5, 0)
mainFrame.Name = "MainFrame"
mainFrame.Parent = screenGui

local mainFrame_UIAspect = Instance.new("UIAspectRatioConstraint")
mainFrame_UIAspect.AspectRatio = 1.858
mainFrame_UIAspect.AspectType = Enum.AspectType.FitWithinMaxSize
mainFrame_UIAspect.Parent = mainFrame

-- Background
local background = Instance.new("Frame")
background.AnchorPoint = Vector2.new(0.5, 0.5)
background.BackgroundColor3 = Color3.fromRGB(76, 76, 76)
background.BorderColor3 = Color3.fromRGB(45, 61, 49)
background.Size = UDim2.new(1, 0, 1, 0)
background.Position = UDim2.new(0.5, 0, 0.5, 0)
background.Name = "Background"
background.Parent = mainFrame

-- Title
local title = Instance.new("TextLabel")
title.AnchorPoint = Vector2.new(0.5, 0.5)
title.BackgroundColor3 = Color3.fromRGB(255, 147, 255)
title.BackgroundTransparency = 0.5
title.Position = UDim2.new(0.5, 0, 0.05, 0)
title.Size = UDim2.new(0.5, 0, 0.1, 0)
title.Font = Enum.Font.SourceSansBold
title.Text = "Pocoyo Hub"
title.TextSize = 30
title.TextColor3 = Color3.fromRGB(251, 142, 255)
title.TextStrokeTransparency = 0.5
title.Parent = background

-- Buttons Frame
local buttonsFrame = Instance.new("Frame")
buttonsFrame.BackgroundColor3 = Color3.fromRGB(76, 76, 76)
buttonsFrame.Position = UDim2.new(0.02, 0, 0.12, 0)
buttonsFrame.Size = UDim2.new(0.9, 0, 0.08, 0)
buttonsFrame.Name = "Buttons"
buttonsFrame.BorderSizePixel = 0
buttonsFrame.Parent = mainFrame

-- ESP Button
local espButton = Instance.new("TextButton")
espButton.BackgroundColor3 = Color3.fromRGB(21, 255, 255)
espButton.Size = UDim2.new(0.1, 0, 1, 0)
espButton.Font = Enum.Font.SourceSansBold
espButton.Text = "ESP"
espButton.TextSize = 14
espButton.TextStrokeTransparency = 0.5
espButton.Parent = buttonsFrame

-- ESP Frame
local espFrame = Instance.new("Frame")
espFrame.BackgroundTransparency = 1
espFrame.Size = UDim2.new(1, 0, 1, 0)
espFrame.Name = "ESP"
espFrame.Parent = mainFrame

local toggleFrame = Instance.new("Frame")
toggleFrame.BackgroundTransparency = 0.9
toggleFrame.Position = UDim2.new(0.03, 0, 0.3, 0)
toggleFrame.Size = UDim2.new(0.2, 0, 0.1, 0)
toggleFrame.Name = "Toggle"
toggleFrame.Parent = espFrame

-- ESP Text Label
local espLabel = Instance.new("TextLabel")
espLabel.BackgroundTransparency = 1
espLabel.Size = UDim2.new(1, 0, 1, 0)
espLabel.Font = Enum.Font.SourceSansBold
espLabel.Text = "ESP"
espLabel.TextSize = 14
espLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
espLabel.TextXAlignment = Enum.TextXAlignment.Left
espLabel.Parent = toggleFrame

-- Toggle Button (ON/OFF)
local toggleButton = Instance.new("TextButton")
toggleButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.BackgroundTransparency = 1
toggleButton.Size = UDim2.new(1, 0, 1, 0)
toggleButton.Font = Enum.Font.SourceSansBold
toggleButton.Text = "OFF"
toggleButton.TextSize = 14
toggleButton.TextColor3 = Color3.fromRGB(255, 0, 0)
toggleButton.TextStrokeTransparency = 1
toggleButton.Name = "ToggleButton"
toggleButton.TextXAlignment = Enum.TextXAlignment.Right
toggleButton.Parent = toggleFrame

-- UI Layout
local uiLayout = Instance.new("UIListLayout")
uiLayout.Padding = UDim.new(0.05, 0)
uiLayout.FillDirection = Enum.FillDirection.Horizontal
uiLayout.HorizontalAlignment = Enum.HorizontalAlignment.Left
uiLayout.VerticalAlignment = Enum.VerticalAlignment.Center
uiLayout.Parent = buttonsFrame

-- Corners
local cornerTitle = Instance.new("UICorner")
cornerTitle.CornerRadius = UDim.new(0, 8)
cornerTitle.Parent = title

local cornerButton = Instance.new("UICorner")
cornerButton.CornerRadius = UDim.new(0.2, 0)
cornerButton.Parent = espButton

local cornerToggle = Instance.new("UICorner")
cornerToggle.CornerRadius = UDim.new(0.1, 0)
cornerToggle.Parent = toggleButton

-- FUNCTIONALITY
-- Toggle ScreenGui Visibility with INSERT
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.Insert then
        screenGui.Enabled = not screenGui.Enabled
    end
end)

-- Toggle ESP Functionality
toggleButton.MouseButton1Click:Connect(function()
    getgenv().ESP = not getgenv().ESP
    if getgenv().ESP then
        print("ESP Enabled")
        toggleButton.Text = "ON"
        toggleButton.TextColor3 = Color3.fromRGB(0, 255, 0)

        -- Ensure ESPs are created for all players
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= Players.LocalPlayer then
                updateESP(player)
            end
        end
    else
        print("ESP Disabled")
        toggleButton.Text = "OFF"
        toggleButton.TextColor3 = Color3.fromRGB(255, 0, 0)

        -- Remove all existing ESPs
        removeAllESPs()
    end
end)

-- Monitorar CharacterAdded para recriar o SuperLeaderboard
player.CharacterAdded:Connect(function()
    print("[DEBUG] CharacterAdded detected. Rebuilding SuperLeaderboard.")
    wait(1) -- Pequeno atraso para garantir o carregamento do PlayerGui
    rebuildLeaderboard()
end)

-- Inicializar o SuperLeaderboard na primeira execução
print("[DEBUG] Initializing SuperLeaderboard...")
rebuildLeaderboard()
